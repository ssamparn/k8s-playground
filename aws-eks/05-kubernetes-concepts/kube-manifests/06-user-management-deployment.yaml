apiVersion: apps/v1
kind: Deployment 
metadata:
  namespace: dev
  name: user-management-microservice
  labels:
    app: user-management-restapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-management-restapp
  template:  
    metadata:
      labels: 
        app: user-management-restapp
    spec:
      initContainers:
        - name: init-mysql-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
        - name: user-management-restapp
          image: ssamantr/user-service-rds-mysql:1.0.0
          ports: 
            - containerPort: 8090
          env:
            - name: spring.datasource.url
              value: 'jdbc:mysql://mysql:3306/user-management'
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: mysql-db-creds
                  key: db-user
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: mysql-db-creds
                  key: db-password
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 8090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8090
            initialDelaySeconds: 40
            periodSeconds: 20
#          resources:
#            requests:
#              cpu: '500m' # `m` means milliCPU
#              memory: '128Mi' # 128 MebiByte = 135 Megabyte (MB)
#            limits:
#              cpu: '1000m' # 1000m is equal to 1 VCPU core
#              memory: '512Mi'